@using eManager.WebModels;
@model List<ProductViewModel>
@{
    ViewData["Title"] = "Products";
    Layout = "_Layout";

}


<div class="row col-md-12">
    <div class="col-md-4">
        <a class="btn btn-info" asp-controller="Product" asp-action="UploadProduct">Add product</a>
    </div>
    <div class="col-md-4">
        <input id="searchProduct" type="text" placeholder="Search product..">
    </div>
    <div class="col-md-4">
        <button class="btn btn-info"  onclick="location.href='@Url.Action("Products", "Product")'">Refresh list</button>
    </div>
   
</div>
<br/>
<br/>

<div class="container">
    <div id="msg" class="alert-success" style="display:none">PRODUCT ADDED!</div>
    <div class="row catalog" id="productsTable">
        @foreach (var product in Model)
        {

            <div class="card">
                <img class="card-img-top" src=@Url.Content("~/UploadedFiles/" + product.ImageUrl) style="width: 16rem; height: 16rem;" />
                <div class="card-body">
                    <input asp-for="@product.Id" hidden />
                    <h3 class="card-title">@product.Name</h3>
                    <h5 class="card-header">@product.Price MKD(denars)</h5>
                    <h3 class="card-title">@product.SelectedCompany</h3>
                    <button value="@product.Id" class="btn btn-primary productItem" role="button">Add</button>
                    <a class="btn btn-danger" asp-controller="Product" asp-action="RemoveProduct" asp-route-id="@product.Id">Delete</a>
                </div>

            </div>


        }

    </div>
</div>
<script>


    let products = document.getElementsByClassName("catalog")[0];
    console.log(products);
    products.addEventListener("click", function (e) {
        e.stopPropagation();
        let target = e.target;


        let targetId = target.classList.contains("productItem") ? target.value : null;
        console.log(targetId);

        if (targetId != null) {
            fetch("/Procurement/AddProduct?productId=" + targetId, {
                method: "post",

            })


        }


    })


    $('.productItem').click(function () {
        setTimeout(function () {

            $("#msg").show().fadeOut(3000);
        }, 400)
    })






    $(function () {
        $("#addProductModal").modal();
    });

    $("#uploadImage").change(function (e) {
        e.preventDefault();
        var element = this;
        var formInfo = new FormData();
        var totalFiles = element.files.length;

        for (i = 0; i < totalFiles; i++) {
            var file = element.files[i];
            formInfo.append("ImageUrl", file);
        }

        $.ajax({
            type: "POST",
            url: "/Product/UploadProduct",
            data: formInfo,
            dataType: "json",
            contentType: false,
            processData: false,
            success: function (response) {

                console.log(response);
                if (response) {

                    alert("Success");


                }
            },
            error: function () {
                console.log("Error");
            }
        });
    });

    $('#upload').submit(function (e) {
        e.preventDefault();

        $.ajax({
            url: this.action,
            type: this.method,
            data: new FormData(this),
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                console.log(data.UploadedFileCount + ' file(s) uploaded successfully');
                $("#ImageUrl").show();

            },
            error: function (xhr, error, status) {
                console.log(error, status);
            }
        });
    });


    $(document).ready(function () {
        $("#searchProduct").keyup(function () {

            var value = $(this).val().toLowerCase();

            console.log(value);
            $("#productsTable .card").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });


</script>