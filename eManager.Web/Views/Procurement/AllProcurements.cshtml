@using eManager.WebModels;
@model IPagedList<ProcurementViewModel>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

@{
    ViewBag.Title = "Procurements";
    Layout = "_Layout";
}
<style>
    h1 {
        position: relative;
        margin-top: 20px;
        font-family: 'Cardo', serif;
    }

        h1.one span {
            background: #fff;
            padding: 0 20px;
            position: relative;
            z-index: 5;
        }
</style>

<div class="container" id="listProcurements">
    <h1 class="one"><span>Procurements</span></h1>
    <p> <a class="btn btn-primary" onclick="location.href='@Url.Action("Products", "Product")'">Add Procurement</a></p><br />
    <table class="table table-striped table-bordered" cellspacing="0" width="100">
        <thead>
            <tr>
                <th>#</th>
                <th>Product</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total Cost</th>
                <th>Date</th>
                <th>Issuer</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var procurement in Model)
            {

                <tr>

                    <td>@procurement.Id</td>
                    <td>
                        @foreach (var item in procurement.ProcurementProducts)
                        {

                            <li>@item.Name</li><br />
                        }
                    </td>
                    <td>

                        @foreach (var item in procurement.ProcurementProducts)
                        {

                            <li>@item.Quantity</li>
                        }
                    </td>
                    <td>
                        @foreach (var item in procurement.ProcurementProducts)
                        {

                            <li>@item.Price</li>
                        }
                    </td>
                    <td>
                        @foreach (var item in procurement.ProcurementProducts)
                        {

                            <li>@{var total = item.Price * item.Quantity;} @total </li>
                        }
                    </td>






                    <td>@procurement.Date</td>
                    <td>@procurement.User.FullName</td>



                    @if (procurement.ProcurementStatus == ProcurementStatusViewModel.Pending)
                    {
                        <td>
                            <a asp-action="ConfirmProcurement" asp-controller="Procurement" asp-route-procurementId="@procurement.Id" class="btn btn-primary">Approve</a>
                            <a asp-action="DeclineProcurement" asp-controller="Procurement" asp-route-procurementId="@procurement.Id" class="btn btn-danger">Decline</a>
                        </td>
                    }
                    else if (procurement.ProcurementStatus == ProcurementStatusViewModel.Approved)
                    {
                        <td>Waiting for delivery!</td>
                    }
                    else if (procurement.ProcurementStatus == ProcurementStatusViewModel.Declined)
                    {
                        <td>Procurement is declined!</td>
                    }
                    else
                    {
                        <td>Pending request....</td>
                    }

                    <td>

                        <a asp-action="DeleteProcurement" asp-controller="Procurement" asp-route-id="@procurement.Id">Remove</a>


                    </td>
                </tr>
            }
        </tbody>
    </table>

    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("AllProcurements",
    new { page, sort = ViewBag.CurrentSort, filter = ViewBag.CurrentFilter }))
</div>



<script>
    $(function () {
        $("#removeProcurementModal").modal();
    });
</script>